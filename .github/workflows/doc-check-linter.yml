name: Portfolio CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # -------------------
  # 1. Lint HTML, CSS, JS
  # -------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install linters
        run: npm install -g eslint stylelint htmlhint

      - name: Lint JavaScript
        run: eslint . --ext .js,.jsx || true

      - name: Lint CSS
        run: stylelint "**/*.{css,scss}" || true

      - name: Lint HTML
        run: htmlhint "**/*.html" || true

  # -------------------
  # 2. DCO + GPG Check (latest commit only)
  # -------------------
  commit-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history, but we‚Äôll check only the latest commit

      # ---------- DCO Check ----------
      - name: DCO Check
        if: github.event_name == 'pull_request'
        uses: tisonkun/actions-dco@v1.1

      # ---------- Import GPG Public Key ----------
      - name: Import trusted GPG public key
        env:
          GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          if [ -z "$GPG_PUBLIC_KEY" ]; then
            echo "‚ùå ERROR: GPG_PUBLIC_KEY secret is missing!"
            echo "Please add your exported public keys in GitHub repo settings ‚Üí Secrets ‚Üí Actions ‚Üí GPG_PUBLIC_KEY"
            exit 1
          fi

          echo "$GPG_PUBLIC_KEY" | gpg --import
          echo "‚úÖ Trusted public GPG keys imported successfully."

      # ---------- Verify latest commit signature ----------
      - name: Verify latest commit signature
        run: |
          # Only check the latest commit
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "üîç Checking latest commit: $LATEST_COMMIT"

          SIG=$(git log --show-signature -1 "$LATEST_COMMIT")
          echo "$SIG"

          TRUSTED_KEYS="7F4C7CA953E1C09E D432152833DA3244 C97540DA6C9FA85C 88F6CD4E295C906"
          GITHUB_KEY="4AEE18F83AFDEB23"
          TRUSTED="$TRUSTED_KEYS $GITHUB_KEY"

          if echo "$SIG" | grep -q "Good signature"; then
            for key in $TRUSTED; do
              if echo "$SIG" | grep -q "$key"; then
                echo "‚úÖ Commit signed with trusted key: $key"
                exit 0
              fi
            done
          fi

          echo "‚ùå Commit is not GPG signed with a trusted key!"
          exit 1
